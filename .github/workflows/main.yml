name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build:
    strategy:
      matrix:
        jdk: ['17']
    runs-on: ubuntu-latest
    name: "Build (JDK ${{ matrix.jdk }})"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: ${{ matrix.jdk }}
      - uses: gradle/gradle-build-action@v2
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: |
            -Porg.gradle.java.installations.auto-download=false
            "-Dscan.value.GitHub job=${{ github.job }}"
            -Dscan.tag.JDK_${{ matrix.jdk }}
            --scan
            javaToolchains
            build
  ea-build:
    strategy:
      matrix:
        jdk: ['18']
    runs-on: ubuntu-latest
    name: "Early Access Build (JDK ${{ matrix.jdk }})"
    steps:
      - uses: actions/checkout@v2
      - name: 'Download JDK ${{ matrix.jdk }}'
        id: download-jdk
        uses: sormuras/download-jdk@v1
        with:
          feature: '${{ matrix.jdk }}'
      - uses: actions/setup-java@v2
        with:
          distribution: 'jdkfile'
          java-version: '${{ steps.download-jdk.outputs.version }}'
          jdkFile: '${{ steps.download-jdk.outputs.file }}'
      - uses: gradle/gradle-build-action@v2
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: |
            -Porg.gradle.java.installations.auto-download=false
            "-Dscan.value.GitHub job=${{ github.job }}"
            -Dscan.tag.JDK_${{ matrix.jdk }}
            --scan
            javaToolchains
            build
  publish:
    name: Publish Snapshots
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'junit-team/testng-engine' && (startsWith(github.ref, 'refs/heads/releases/') || github.ref == 'refs/heads/main')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11
      - uses: gradle/gradle-build-action@v2
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
        with:
          arguments: |
            -Porg.gradle.java.installations.auto-download=false
            "-Dscan.value.GitHub job=${{ github.job }}"
            -Dscan.tag.publish
            --scan
            javaToolchains
            publish
            -x check
